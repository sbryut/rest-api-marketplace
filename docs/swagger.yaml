definitions:
  entity.Ad:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      image_url:
        type: string
      price:
        type: number
      title:
        type: string
      user_id:
        type: integer
    type: object
  entity.User:
    properties:
      created_at:
        type: string
      id:
        type: integer
      login:
        type: string
    type: object
  v1.createAdInput:
    properties:
      description:
        maxLength: 1000
        type: string
      image_url:
        type: string
      price:
        minimum: 0
        type: number
      title:
        maxLength: 100
        minLength: 1
        type: string
    required:
    - description
    - title
    type: object
  v1.refreshInput:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  v1.tokenResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  v1.updateAdInput:
    properties:
      description:
        maxLength: 1000
        type: string
      image_url:
        type: string
      price:
        minimum: 0
        type: number
      title:
        maxLength: 100
        minLength: 1
        type: string
    required:
    - description
    - title
    type: object
  v1.userInput:
    properties:
      login:
        maxLength: 64
        minLength: 3
        type: string
      password:
        maxLength: 64
        minLength: 8
        type: string
    required:
    - login
    - password
    type: object
info:
  contact: {}
paths:
  /api/v1/ads:
    get:
      description: Retrieve a paginated list of advertisements
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: limit
        type: integer
      - description: Minimum price
        format: float64
        in: query
        name: min_price
        type: number
      - description: Maximum price
        format: float64
        in: query
        name: max_price
        type: number
      - description: Sort by field (e.g., price, created_at)
        in: query
        name: sort_by
        type: string
      - description: Sort direction (asc or desc)
        in: query
        name: sort_dir
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Ad'
            type: array
        "400":
          description: Incorrect price parameter
          schema: {}
        "500":
          description: Failed to get ads
          schema: {}
      summary: List Ads
      tags:
      - ads
    post:
      consumes:
      - application/json
      description: Create a new advertisement
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: Ad creation details
        in: body
        name: ad
        required: true
        schema:
          $ref: '#/definitions/v1.createAdInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.Ad'
        "400":
          description: Invalid request body or input
          schema: {}
        "409":
          description: Unauthorized
          schema: {}
        "500":
          description: Failed to create ad
          schema: {}
      summary: Create Ad
      tags:
      - ads
  /api/v1/ads/{id}:
    delete:
      description: Delete an advertisement by its ID
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: Ad ID
        format: int64
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No content
        "400":
          description: Invalid ad ID
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "403":
          description: Forbidden
          schema: {}
        "404":
          description: Ad not found
          schema: {}
        "500":
          description: Failed to delete ad
          schema: {}
      summary: Delete Ad
      tags:
      - ads
    get:
      description: Retrieve a single advertisement by its ID
      parameters:
      - description: Ad ID
        format: int64
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Ad'
        "400":
          description: Invalid ad ID
          schema: {}
        "404":
          description: Ad not found
          schema: {}
        "500":
          description: Failed to get ad
          schema: {}
      summary: Get Ad by ID
      tags:
      - ads
    put:
      consumes:
      - application/json
      description: Update an existing advertisement
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: Ad ID
        format: int64
        in: path
        name: id
        required: true
        type: integer
      - description: Ad update details
        in: body
        name: ad
        required: true
        schema:
          $ref: '#/definitions/v1.updateAdInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Ad'
        "400":
          description: Invalid request body or input
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "403":
          description: Forbidden
          schema: {}
        "404":
          description: Ad not found
          schema: {}
        "500":
          description: Failed to update ad
          schema: {}
      summary: Update Ad
      tags:
      - ads
  /api/v1/users/auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresh JWT access and refresh tokens
      parameters:
      - description: Refresh token
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/v1.refreshInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.tokenResponse'
        "400":
          description: Invalid request body
          schema: {}
        "401":
          description: Invalid or expired refresh token
          schema: {}
        "500":
          description: Internal server error
          schema: {}
      summary: Refresh Tokens
      tags:
      - users
  /api/v1/users/sign-in:
    post:
      consumes:
      - application/json
      description: User sign-in
      parameters:
      - description: User credentials for login
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/v1.userInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.tokenResponse'
        "400":
          description: Invalid request body
          schema: {}
        "401":
          description: Invalid login or password
          schema: {}
        "500":
          description: Failed to sign in
          schema: {}
      summary: User Sign In
      tags:
      - users
  /api/v1/users/sign-up:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: User credentials for registration
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/v1.userInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Invalid request body
          schema: {}
        "409":
          description: User with this login already exists
          schema: {}
        "500":
          description: Failed to create user
          schema: {}
      summary: User Sign Up
      tags:
      - users
swagger: "2.0"
